<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/tpo/seminario/breakbuddy/ExampleInstrumentedTest.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/messaging/MyFirebaseMessagingService.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/persistence/GroupRepository.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/persistence/OrganizationRepository.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/persistence/UserRepository.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/changePassword/PasswordResetFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardViewModel.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/CreateGroupFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupsViewModel.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeViewModel.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/login/LoginFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsViewModel.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/register/HobbiesFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/register/RegisterFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/AccountSettingsFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/ChangePasswordFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/EditHobbiesFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeFragment.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeViewModel.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/util/Group.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/util/HobbiesList.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/util/Organization.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/BreakBuddyApp.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/main/java/tpo/seminario/breakbuddy/MainActivity.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/src/test/java/tpo/seminario/breakbuddy/ExampleUnitTest.kt;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/build.gradle.kts;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/app/google-services.json;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/build.gradle.kts;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy&quot;:&quot;{\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/RegisterFragment.kt\&quot;:\&quot;This file contains a single class:\\n\\n`RegisterFragment`: A Fragment class that handles the user registration process, including validating the input fields, creating a new user account in Firebase Authentication, and creating a user document in Firestore.\\n\\nThe file also contains the following functions:\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout and initializes the Firebase Authentication instance.\\n\\n`onViewCreated`: Sets up the event listeners for the input fields, handles the registration button click, and navigates to the login screen when the user clicks the \\\&quot;Go to Login\\\&quot; link.\\n\\n`checkPasswordRequirements`: Checks the password entered by the user against the specified requirements (length, uppercase letter, and digit) and updates the UI accordingly.\\n\\nOverall, this file implements the user registration functionality for the BreakBuddy app, including integration with Firebase Authentication and Firestore.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsFragment.kt\&quot;:\&quot;`NotificationsFragment`: A Fragment class that displays a notification screen with an AdView banner.\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout, sets up the ViewModel, and returns the root view.\\n\\n`onViewCreated`: Initializes the AdView, sets up an AdListener with a retry mechanism, and loads the ad.\\n\\n`onDestroyView`: Destroys the AdView and cleans up the binding.\\n\\nThis file contains a Fragment class that displays a notification screen with an AdView banner. The AdView is loaded with a retry mechanism to handle failed ad loads.\&quot;,\&quot;/app/google-services.json\&quot;:\&quot;This file appears to be a JSON configuration file for a Firebase project called \\\&quot;breakbuddy-app\\\&quot;. It contains information about the project, such as the project number, project ID, and storage bucket. It also includes client information, such as the mobile SDK app ID, package name, and OAuth client IDs. The file does not contain any classes or functions, but rather serves as a configuration file for the Firebase project.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardViewModel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`DashboardViewModel`: A ViewModel class that holds a LiveData object representing the text to be displayed in the dashboard fragment.\\n\\nThe file does not contain any functions. Instead, it initializes a `MutableLiveData` object with the text \\\&quot;This is dashboard Fragment\\\&quot; and exposes it as a `LiveData` object through the `text` property.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsViewModel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`NotificationsViewModel`: A ViewModel class that manages the data and logic for the Notifications Fragment in the BreakBuddy application.\\n\\nThe file does not contain any functions, but it does define a `text` LiveData property that holds a string value representing the text to be displayed in the Notifications Fragment.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeFragment.kt\&quot;:\&quot;`HomeFragment`: A Fragment class that displays a home screen with an AdView banner.\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout and sets up the ViewModel.\\n`onViewCreated`: Loads the AdView banner and sets up a retry mechanism in case of failure.\\n`onDestroyView`: Destroys the AdView when the fragment is destroyed.\\n\\nThis file contains a Fragment class called `HomeFragment` that is responsible for displaying the home screen of the application. The fragment includes an AdView banner, which is loaded and managed within the class. The file also includes several functions that handle the lifecycle of the fragment and the AdView.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/HobbiesList.kt\&quot;:\&quot;This file does not contain any classes or functions. Instead, it defines a singleton object called `HobbiesList` that contains a list of default hobbies. This list can be used in an application that deals with hobbies or interests.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/ChangePasswordFragment.kt\&quot;:\&quot;This file contains a single class:\\n\\n`ChangePasswordFragment`: A fragment that allows the user to change their password, with validation for password requirements and integration with Firebase Authentication.\\n\\nThe file also contains the following functions:\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout and returns the root view.\\n`onViewCreated`: Sets up the UI and event listeners, and handles the password change logic.\\n`checkPasswordRequirements`: Checks if the new password meets the specified requirements (length, uppercase, and digit) and updates the UI accordingly.\\n\\nOverall, this file implements the functionality for a \\\&quot;Change Password\\\&quot; feature in the BreakBuddy app, which is built using Android and Firebase Authentication.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/BreakBuddyApp.kt\&quot;:\&quot;This file is the main application class for the BreakBuddy Android app. It performs the following tasks:\\n\\n`BreakBuddyApp`: Initializes the AdMob SDK, Firebase, and Google Sign-In, and configures the Firebase Firestore offline settings.\\n\\n`onCreate()`: Initializes the AdMob SDK, Firebase, and Google Sign-In, and configures the Firebase Firestore offline settings. It also connects to the Firebase Emulator Suite in debug builds.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/HobbiesFragment.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`HobbiesFragment`: A Fragment class that allows the user to select their hobbies and saves the selected hobbies to the user\\u0027s profile in the Firebase database.\\n\\n`agegarCheckBoxes()`: A function that creates a list of checkboxes for the user to select their hobbies from.\\n\\n`guardarHobbiesSeleccionados()`: A function that retrieves the selected hobbies, gets the current user\\u0027s ID, and saves the selected hobbies to the user\\u0027s profile in the Firebase database.\\n\\nOverall, this file is responsible for the user interface and functionality of the \\\&quot;Hobbies\\\&quot; screen in the BreakBuddy application, allowing users to select their hobbies and saving that information to their profile.\&quot;,\&quot;/app/src/test/java/tpo/seminario/breakbuddy/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. The file does not define any classes or functions, but rather contains a single unit test that verifies the correctness of the addition operation.\\n\\n`ExampleUnitTest`: A class that contains a single unit test for the addition operation.\\n\\n`addition_isCorrect()`: A test function that verifies that the addition operation of 2 + 2 is correct and returns the expected result of 4.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/GroupRepository.kt\&quot;:\&quot;This file contains a `GroupRepository` class and several functions related to managing groups in a Firebase-based application.\\n\\n`GroupRepository`: A class that provides methods for creating, joining, and managing groups in a Firebase Firestore database.\\n\\n`createGroup`: A function that creates a new group with a unique code, saves it to Firestore, and returns the group code or an error message.\\n\\n`generateUniqueGroupCode`: A function that generates a unique 6-character group code and checks if it already exists in the Firestore database.\\n\\n`generateRandomCode`: A function that generates a random 6-character code using uppercase letters and digits.\\n\\n`joinGroupByCode`: A function that allows a user to join a group by entering a valid group code, and updates the group\\u0027s member list in Firestore.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/EditHobbiesFragment.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`EditHobbiesFragment`: A Fragment that allows the user to edit their hobbies, which are stored in Firestore.\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout, sets up the UI elements, loads the user\\u0027s saved hobbies from Firestore, and handles the \\\&quot;Save\\\&quot; button click to update the user\\u0027s hobbies in Firestore.\\n\\n`agregarCheckBoxes`: Adds a set of checkboxes to the UI, representing the available hobbies, and ensures that the user can only select up to 5 hobbies.\\n\\nOverall, this file is responsible for the implementation of the \\\&quot;Edit Hobbies\\\&quot; feature in the BreakBuddy app, allowing users to manage their hobbies and persist the changes to the Firestore database.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/AccountSettingsFragment.kt\&quot;:\&quot;This file contains the implementation of the `AccountSettingsFragment` class, which is a Fragment that displays the user\\u0027s account settings in the BreakBuddy application.\\n\\n`AccountSettingsFragment`: A Fragment that displays the user\\u0027s account settings, including the ability to edit hobbies, change the password, and log out of the application.\\n\\n`onCreateView`: Inflates the layout for the `AccountSettingsFragment` and returns the root view.\\n\\n`onViewCreated`: Initializes the UI elements of the `AccountSettingsFragment`, sets the greeting message, loads the default avatar image, and sets up click listeners for the \\\&quot;Edit Hobbies\\\&quot;, \\\&quot;Change Password\\\&quot;, and \\\&quot;Logout\\\&quot; options.\\n\\n`onDestroyView`: Cleans up the binding object when the Fragment is destroyed.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/CreateGroupFragment.kt\&quot;:\&quot;This file contains a single class, `CreateGroupFragment`, which is a Fragment that handles the creation of a new group in the BreakBuddy app.\\n\\n`CreateGroupFragment`: A Fragment that allows users to create a new group, with options to specify the group type (personal or organization), group name, member emails, and a hobby.\\n\\n`setupViews()`: Configures the views and sets up event listeners for the various input fields and buttons.\\n`setupHobbyDropdown()`: Sets up an AutoCompleteTextView for selecting a hobby from a predefined list.\\n`observeViewModel()`: Observes the ViewModel for changes in the UI state and updates the UI accordingly.\\n`createGroup()`: Handles the creation of a new group, including validating the input, processing the emails, and creating a new organization if necessary.\\n`createOrganization()`: Creates a new organization in the Firestore database.\\n`actuallyCreateGroup()`: Calls the ViewModel to create the new group.\\n`validateInputs()`: Validates the group name and email inputs.\\n`processEmails()`: Processes the input email string, extracting a list of valid email addresses.\\n`updateUI()`: Updates the UI based on the current state of the ViewModel.\\n`showSuccessDialog()`: Displays a success dialog with the group code and allows the user to copy it to the clipboard.\\n`copyToClipboard()`: Copies the given text to the device\\u0027s clipboard.\\n`showErrorMessage()`: Displays an error message.\\n`showSuccessToast()`: Displays a success toast message.\\n`showErrorToast()`: Displays an error toast message.\\n`showFieldError()`: Displays an error message for a specific input field.\\n`clearFieldError()`: Clears the error message for a specific input field.\\n`navigateBack()`: Navigates back to the previous screen.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Group.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Group`: A data class that represents a group, with properties such as an ID, name, creator, list of emails, hobby, code, type (personal or organization), and organization ID (if the group is an organization).\\n\\nThis file does not contain any functions. It serves as a data model for representing group information in the BreakBuddy application.\&quot;,\&quot;/app/src/androidTest/java/tpo/seminario/breakbuddy/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for the BreakBuddy Android app. It does not contain any classes or functions, but rather a single test case that checks if the app\\u0027s package name matches the expected value.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and checks the context of the app under test.\\n\\n`useAppContext()`: This test function checks if the package name of the app under test matches the expected value.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeFragment.kt\&quot;:\&quot;This file contains the implementation of the `WelcomeFragment` class, which is responsible for handling the welcome screen of the BreakBuddy application.\\n\\n`WelcomeFragment`: This class represents the welcome screen fragment of the BreakBuddy application, which allows users to navigate to the login or registration screens, or automatically redirects them to the dashboard if they are already logged in.\\n\\n`onCreateView`: This function is responsible for inflating the layout of the welcome fragment and setting up the click listeners for the login and registration buttons.\\n\\n`onViewCreated`: This function is called when the view of the welcome fragment is created, and it initializes the Firebase authentication instance, checks if a user is already logged in, and sets up the click listener for the Google sign-in button.\\n\\n`setupButtonClickListeners`: This function is responsible for configuring the click listeners for the login and registration buttons when there is no user logged in.\\n\\n`firebaseAuthWithGoogle`: This function handles the authentication process when a user signs in with their Google account, including ensuring the user\\u0027s document exists in Firestore, retrieving the user\\u0027s profile, and navigating to the appropriate screen based on whether the user has completed their hobbies.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupsViewModel.kt\&quot;:\&quot;`GroupCreationState`: A data class that represents the state of creating a group.\\n\\n`GroupsViewModel`: A ViewModel class that handles the logic for creating a group.\\n\\n`createGroup`: A function that creates a new group with the provided name, emails, hobby, type, and organization ID, and updates the UI state accordingly.\\n\\n`validateInputs`: A function that validates the input parameters for creating a group, and updates the UI state with any error messages.\\n\\n`clearError`: A function that clears any error messages in the UI state.\\n\\nThis file contains the implementation of a ViewModel class for managing the creation of groups in the BreakBuddy application. The ViewModel handles the logic for validating the input parameters, creating the group, and updating the UI state accordingly.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Organization.kt\&quot;:\&quot;This file contains a single data class:\\n\\n`Organization`: A data class that represents an organization with an ID and a name.\\n\\nThis file does not contain any functions. It simply defines a data class to represent an organization with an ID and a name.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project named \\\&quot;BreakBuddy\\\&quot;. It sets up the plugin management and dependency resolution for the project, as well as the name of the root project.\\n\\n`pluginManagement`: Configures the repositories to be used for plugin resolution, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories to be used for dependency resolution, including Google and Maven Central, and sets the repositories mode to fail on project repositories.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;BreakBuddy\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeViewModel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`HomeViewModel`: A ViewModel class that holds a LiveData object representing the text to be displayed in the home fragment.\\n\\nThe file does not contain any functions. Instead, it sets up a `MutableLiveData` object with the initial value \\\&quot;This is home Fragment\\\&quot; and exposes it as a read-only `LiveData` object through the `text` property.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/login/LoginFragment.kt\&quot;:\&quot;This file contains a single class, `LoginFragment`, which is a Fragment that handles the login functionality of the BreakBuddy application.\\n\\n`LoginFragment`: A Fragment that handles the login functionality of the BreakBuddy application, including email and password validation, Firebase authentication, and navigation to other fragments based on the user\\u0027s profile.\\n\\n`onCreateView`: Inflates the login fragment\\u0027s layout, sets up the Firebase authentication instance, and handles the login button click, including the login process with Firebase and navigation to other fragments.\\n\\n`onDestroyView`: Cleans up the binding object when the view is destroyed.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It defines the project\\u0027s dependencies, build configurations, and other settings. There are no explicit classes or functions defined in this file. Instead, it configures the build process for the Android application.\\n\\nThe key elements in this file are:\\n\\n`plugins`: Specifies the Android application and Kotlin plugins to be used in the project.\\n`android`: Configures the Android-specific settings, such as the application ID, SDK versions, and build types.\\n`dependencies`: Declares the external libraries and frameworks used by the application, including Firebase, Google Play Services, Jetpack Navigation, Glide, and various Android support libraries.\\n\\nOverall, this file sets up the build environment and dependencies for the BreakBuddy Android application.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/OrganizationRepository.kt\&quot;:\&quot;This file contains the `OrganizationRepository` class and two functions:\\n\\n`OrganizationRepository`: A class that provides methods for interacting with the Firebase Firestore database to fetch and create organizations.\\n\\n`fetchAll`: A function that retrieves all organizations from the Firestore database and calls the provided success or failure callbacks.\\n\\n`createOrganization`: A function that creates a new organization in the Firestore database and calls the provided success or failure callbacks.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardFragment.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`DashboardFragment`: A Fragment class that displays a dashboard UI with an AdView banner.\\n\\n`onCreateView`: Inflates the dashboard fragment layout and sets up the ViewModel.\\n`onViewCreated`: Initializes the AdView, sets up the AdListener with a retry mechanism, and loads the ad.\\n`onDestroyView`: Destroys the AdView and cleans up the binding.\\n\\nThis file is responsible for the implementation of the dashboard fragment in the BreakBuddy Android application. It sets up the UI, integrates with the AdMob SDK to display a banner ad, and handles the ad loading process with a retry mechanism.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but rather sets up the necessary plugins and dependencies for the project.\\n\\nThe key elements in this file are:\\n\\n`plugins`: Applies the Android application and Kotlin Android plugins to all sub-projects, and adds the Google Services plugin for Firebase integration.\\n\\n`buildscript`: Adds the Google Services dependency to the build script, which is required for the Google Services plugin.\\n\\nIn summary, this file sets up the build environment and common configuration for the Android application, ensuring that all sub-projects have the necessary plugins and dependencies to build and integrate with Google Services.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/UserRepository.kt\&quot;:\&quot;This file contains the following classes and functions:\\n\\n`UserProfile`: A data class that represents a user\\u0027s profile information.\\n\\n`UserTokenRepository`: A class that handles updating the user\\u0027s FCM token in the Firestore database.\\n\\n`UserRepository`: A class that handles creating, updating, and retrieving user profile information in the Firestore database.\\n\\n`createUserDocument`: Creates a new document for a newly registered user in the Firestore database.\\n\\n`ensureUserDocumentExists`: Ensures that a user document exists in the Firestore database and updates the `lastLogin` field.\\n\\n`getUserProfile`: Retrieves the user\\u0027s profile information from the Firestore database and maps it to a `UserProfile` object.\\n\\n`saveHobbies`: Saves the user\\u0027s hobbies and marks the `hobbiesCompletados` field as `true` in the Firestore database.\\n\\n`getUserHobbies`: Retrieves the user\\u0027s hobbies from the Firestore database.\\n\\nOverall, this file provides a set of utility functions and classes for managing user profile information in a Firestore database.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/changePassword/PasswordResetFragment.kt\&quot;:\&quot;`PasswordResetFragment`: A fragment that allows the user to reset their password by entering their email address.\\n\\n`onCreateView`: Inflates the fragment\\u0027s layout, sets up the click listener for the \\\&quot;Send\\\&quot; button, and handles the password reset functionality by sending a password reset email to the user\\u0027s email address.\\n\\n`onDestroyView`: Cleans up the binding object when the fragment is destroyed.\\n\\nThis file contains a single class, `PasswordResetFragment`, which is responsible for handling the password reset functionality in the BreakBuddy application. The fragment allows the user to enter their email address, and then sends a password reset email to that address using Firebase Authentication.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/messaging/MyFirebaseMessagingService.kt\&quot;:\&quot;This file contains a single class and three functions:\\n\\n`MyFirebaseMessagingService`: A service that handles Firebase Cloud Messaging (FCM) events, such as receiving new tokens and incoming messages.\\n\\n`onNewToken`: This function is called when a new FCM token is generated, and it updates the user\\u0027s FCM token in the `UserTokenRepository`.\\n\\n`currentUserUid`: This function retrieves the current user\\u0027s unique identifier (UID) from the Firebase Authentication instance.\\n\\nThe purpose of this file is to implement a custom Firebase Messaging Service that can handle various FCM-related events, such as receiving new tokens and incoming messages, and update the user\\u0027s FCM token in the application\\u0027s persistence layer.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupFragment.kt\&quot;:\&quot;This file contains a single class and one function:\\n\\n`GroupsFragment`: A Fragment class that represents the \\\&quot;Groups\\\&quot; screen in the BreakBuddy application.\\n\\n`onCreateView`: A function that inflates the layout for the \\\&quot;Groups\\\&quot; screen and sets up a click listener for the \\\&quot;Create Group\\\&quot; button, which navigates to the `CreateGroupFragment`.\\n\\nThe file is responsible for the implementation of the \\\&quot;Groups\\\&quot; screen in the BreakBuddy application, allowing users to create new groups.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/MainActivity.kt\&quot;:\&quot;This file contains the `MainActivity` class and several functions within it. Here\\u0027s a summary of each:\\n\\n`MainActivity`: The main activity of the BreakBuddy app, which sets up the bottom navigation view and handles the navigation between different fragments.\\n\\n`onCreate(savedInstanceState: Bundle?)`: Initializes the activity, sets up the bottom navigation view, and configures the navigation controller to show or hide the action bar and bottom navigation view based on the current destination.\\n\\n`onSupportNavigateUp()`: Handles the back button press and navigates up the navigation stack.\\n\\nThe file also includes commented-out code related to configuring the offline functionality of the app using Firebase Firestore, but this functionality is not currently implemented in the provided code.\&quot;,\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeViewModel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`WelcomeViewModel`: A ViewModel class that holds a LiveData object representing a welcome message.\\n\\nThe file does not contain any functions. Instead, it sets the initial value of the `_text` LiveData object to the string \\\&quot;¡Bienvenido a BreakBuddy!\\\&quot; and exposes it as a read-only LiveData object `text`.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/Agustin/AndroidStudioProjects/BreakBuddy&quot;:&quot;{\&quot;/app/src/androidTest/java/tpo/seminario/breakbuddy/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/tpo/seminario/breakbuddy/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/messaging/MyFirebaseMessagingService.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/messaging/MyFirebaseMessagingService.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyFirebaseMessagingService.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/GroupRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/GroupRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;GroupRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/OrganizationRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/OrganizationRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;OrganizationRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/UserRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/persistence/UserRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;UserRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/changePassword/PasswordResetFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/changePassword/PasswordResetFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;PasswordResetFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;DashboardFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/dashboard/DashboardViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;DashboardViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/CreateGroupFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/CreateGroupFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;CreateGroupFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;GroupFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupsViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/groups/GroupsViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;GroupsViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/home/HomeViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;HomeViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/login/LoginFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/login/LoginFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoginFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationsFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/notifications/NotificationsViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;NotificationsViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/HobbiesFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/HobbiesFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;HobbiesFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/RegisterFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/register/RegisterFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;RegisterFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/AccountSettingsFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/AccountSettingsFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;AccountSettingsFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/ChangePasswordFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/ChangePasswordFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;ChangePasswordFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/EditHobbiesFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/settings/EditHobbiesFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;EditHobbiesFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeFragment.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeFragment.kt\&quot;,\&quot;file_name\&quot;:\&quot;WelcomeFragment.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/ui/welcome/WelcomeViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;WelcomeViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Group.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Group.kt\&quot;,\&quot;file_name\&quot;:\&quot;Group.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/HobbiesList.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/HobbiesList.kt\&quot;,\&quot;file_name\&quot;:\&quot;HobbiesList.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Organization.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/util/Organization.kt\&quot;,\&quot;file_name\&quot;:\&quot;Organization.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/BreakBuddyApp.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/BreakBuddyApp.kt\&quot;,\&quot;file_name\&quot;:\&quot;BreakBuddyApp.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/tpo/seminario/breakbuddy/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/tpo/seminario/breakbuddy/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/tpo/seminario/breakbuddy/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/tpo/seminario/breakbuddy/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/google-services.json\&quot;:{\&quot;file_path\&quot;:\&quot;/app/google-services.json\&quot;,\&quot;file_name\&quot;:\&quot;google-services.json\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>